name: Build and Publish Docker Images

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:

permissions:
  contents: read
  packages: write
  # id-token is optional; enable if you plan to use provenance/attestations
  id-token: write

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
            image: qr-bar-backend
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
            image: qr-bar-frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute owner (lowercase)
        id: vars
        run: |
          echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.OWNER_LC }}/${{ matrix.image }}
          # Tags strategy:
          # - latest on default branch
          # - branch name when pushing to branches
          # - semver tags when pushing v* tags
          # - short SHA tag on every build
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=short,prefix=sha-

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Set to true and keep id-token permission if you want SLSA provenance
          provenance: false

